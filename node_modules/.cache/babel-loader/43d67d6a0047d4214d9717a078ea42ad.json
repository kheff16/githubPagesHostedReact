{"ast":null,"code":"export function serve() {\n  const server = new EventSource(\"http://localhost:3000/stream/a\");\n  server.addEventListener(\"message\", event => {\n    if (event.data === \"Goodbye!\") {\n      console.log(\"Closing SSE connection\");\n      server.close();\n    } else {\n      console.log(event.data);\n    }\n  });\n\n  server.onerror = _event => {\n    console.log(\"Connection lost, reestablishing\");\n  };\n}\nexport function login() {\n  var request = new XMLHttpRequest();\n  var form = new FormData();\n  form.append(\"password\", this.state.password);\n  form.append(\"username\", this.state.username);\n  sessionStorage.setItem(\"url\", this.state.url);\n  request.open(\"POST\", sessionStorage.getItem(\"url\") + \"/login\");\n  var that = this;\n\n  request.onreadystatechange = function () {\n    if (this.readyState !== 4) return;\n\n    if (this.status === 201) {\n      const data = JSON.parse(this.responseText);\n      that.setState({\n        password: \"\",\n        username: \"\",\n        needToLogin: false,\n        messageToken: data.message_token,\n        streamToken: data.stream_token\n      }); // start_stream();\n    } else if (this.status === 403) {\n      alert(\"Invalid username or password\");\n    } else if (this.status === 409) {\n      alert(this.state.username + \" is already logged in\");\n    } else {\n      alert(this.status + \" failure to /login\");\n    }\n  };\n\n  request.send(form);\n}","map":{"version":3,"sources":["/app/src/helpers/begin.js"],"names":["serve","server","EventSource","addEventListener","event","data","console","log","close","onerror","_event","login","request","XMLHttpRequest","form","FormData","append","state","password","username","sessionStorage","setItem","url","open","getItem","that","onreadystatechange","readyState","status","JSON","parse","responseText","setState","needToLogin","messageToken","message_token","streamToken","stream_token","alert","send"],"mappings":"AAAA,OAAO,SAASA,KAAT,GAAgB;AACnB,QAAMC,MAAM,GAAG,IAAIC,WAAJ,CAAgB,gCAAhB,CAAf;AAGAD,EAAAA,MAAM,CAACE,gBAAP,CAAwB,SAAxB,EAAoCC,KAAD,IAAW;AAC5C,QAAIA,KAAK,CAACC,IAAN,KAAe,UAAnB,EAA+B;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAN,MAAAA,MAAM,CAACO,KAAP;AACD,KAHD,MAGO;AACLF,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,IAAlB;AACD;AACF,GAPD;;AAYAJ,EAAAA,MAAM,CAACQ,OAAP,GAAkBC,MAAD,IAAY;AAC3BJ,IAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACD,GAFD;AAGD;AAIH,OAAO,SAASI,KAAT,GAAiB;AACpB,MAAIC,OAAO,GAAG,IAAIC,cAAJ,EAAd;AACA,MAAIC,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACAD,EAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwB,KAAKC,KAAL,CAAWC,QAAnC;AACAJ,EAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwB,KAAKC,KAAL,CAAWE,QAAnC;AACAC,EAAAA,cAAc,CAACC,OAAf,CAAuB,KAAvB,EAA8B,KAAKJ,KAAL,CAAWK,GAAzC;AACAV,EAAAA,OAAO,CAACW,IAAR,CAAa,MAAb,EAAqBH,cAAc,CAACI,OAAf,CAAuB,KAAvB,IAAgC,QAArD;AACA,MAAIC,IAAI,GAAG,IAAX;;AACAb,EAAAA,OAAO,CAACc,kBAAR,GAA6B,YAAW;AACpC,QAAI,KAAKC,UAAL,KAAoB,CAAxB,EAA2B;;AAC3B,QAAI,KAAKC,MAAL,KAAgB,GAApB,EAAyB;AACrB,YAAMvB,IAAI,GAAGwB,IAAI,CAACC,KAAL,CAAW,KAAKC,YAAhB,CAAb;AACAN,MAAAA,IAAI,CAACO,QAAL,CAAc;AACZd,QAAAA,QAAQ,EAAE,EADE;AAEZC,QAAAA,QAAQ,EAAE,EAFE;AAGZc,QAAAA,WAAW,EAAE,KAHD;AAIZC,QAAAA,YAAY,EAAE7B,IAAI,CAAC8B,aAJP;AAKZC,QAAAA,WAAW,EAAE/B,IAAI,CAACgC;AALN,OAAd,EAFqB,CASrB;AACH,KAVD,MAUO,IAAI,KAAKT,MAAL,KAAgB,GAApB,EAAyB;AAC5BU,MAAAA,KAAK,CAAC,8BAAD,CAAL;AACH,KAFM,MAEA,IAAI,KAAKV,MAAL,KAAgB,GAApB,EAAyB;AAC5BU,MAAAA,KAAK,CAAC,KAAKrB,KAAL,CAAWE,QAAX,GAAsB,uBAAvB,CAAL;AACH,KAFM,MAEA;AACHmB,MAAAA,KAAK,CAAC,KAAKV,MAAL,GAAc,oBAAf,CAAL;AACH;AACJ,GAnBD;;AAoBAhB,EAAAA,OAAO,CAAC2B,IAAR,CAAazB,IAAb;AACD","sourcesContent":["export function serve(){\n    const server = new EventSource(\"http://localhost:3000/stream/a\");\n\n    \n    server.addEventListener(\"message\", (event) => {\n      if (event.data === \"Goodbye!\") {\n        console.log(\"Closing SSE connection\");\n        server.close();\n      } else {\n        console.log(event.data);\n      }\n    });\n\n\n\n\n    server.onerror = (_event) => {\n      console.log(\"Connection lost, reestablishing\");\n    };\n  }\n\n\n\nexport function login() {\n    var request = new XMLHttpRequest();\n    var form = new FormData();\n    form.append(\"password\", this.state.password);\n    form.append(\"username\", this.state.username);\n    sessionStorage.setItem(\"url\", this.state.url);\n    request.open(\"POST\", sessionStorage.getItem(\"url\") + \"/login\");\n    var that = this;\n    request.onreadystatechange = function() {\n        if (this.readyState !== 4) return;\n        if (this.status === 201) {\n            const data = JSON.parse(this.responseText);\n            that.setState({\n              password: \"\",\n              username: \"\", \n              needToLogin: false,\n              messageToken: data.message_token,\n              streamToken: data.stream_token\n            })\n            // start_stream();\n        } else if (this.status === 403) {\n            alert(\"Invalid username or password\");\n        } else if (this.status === 409) {\n            alert(this.state.username + \" is already logged in\");\n        } else {\n            alert(this.status + \" failure to /login\");\n        }\n    };\n    request.send(form);\n  }"]},"metadata":{},"sourceType":"module"}