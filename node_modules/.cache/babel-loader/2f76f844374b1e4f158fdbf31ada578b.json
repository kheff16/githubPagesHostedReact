{"ast":null,"code":"var _jsxFileName = \"/app/src/components/MessageList.jsx\";\nimport React, { Component } from 'react';\nimport { Paper, List, ListItem, ListItemText } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class MessageList extends Component {\n  render() {\n    const messages = this.props.events ? this.props.events.map(message => {\n      if (!message.created) debugger;\n      var dateAndTime = new Date(message.created).toLocaleDateString(\"en-US\") + ' at ' + new Date(message.created).toLocaleTimeString(\"en-US\");\n\n      switch (message.type) {\n        case 'Message':\n          var text = message.user ? `${message.user} says: ${message.message} at ${dateAndTime}` : `${message.message} at ${dateAndTime}`;\n          break;\n\n        case 'Join':\n          var text = `JOIN ${message.user} at ${dateAndTime}`;\n          break;\n\n        case 'Part':\n        default:\n          debugger;\n      }\n\n      return /*#__PURE__*/_jsxDEV(ListItem, {\n        disablePadding: true,\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this)\n      }, toString(message.created), false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this);\n    }) : 'no messages';\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        overflow: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default MessageList;","map":{"version":3,"sources":["/app/src/components/MessageList.jsx"],"names":["React","Component","Paper","List","ListItem","ListItemText","MessageList","render","messages","props","events","map","message","created","dateAndTime","Date","toLocaleDateString","toLocaleTimeString","type","text","user","toString","overflow"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,QAAtB,EAAgCC,YAAhC,QAAoD,eAApD;;AAGA,OAAO,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AACvCM,EAAAA,MAAM,GAAG;AACL,UAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,MAAX,GAAmB,KAAKD,KAAL,CAAWC,MAAX,CAAkBC,GAAlB,CAAwBC,OAAD,IAAa;AACpE,UAAG,CAACA,OAAO,CAACC,OAAZ,EAAqB;AACrB,UAAIC,WAAW,GAAG,IAAIC,IAAJ,CAASH,OAAO,CAACC,OAAjB,EAA0BG,kBAA1B,CAA6C,OAA7C,IAAwD,MAAxD,GAAiE,IAAID,IAAJ,CAASH,OAAO,CAACC,OAAjB,EAA0BI,kBAA1B,CAA6C,OAA7C,CAAnF;;AACA,cAAOL,OAAO,CAACM,IAAf;AACI,aAAK,SAAL;AACI,cAAIC,IAAI,GAAGP,OAAO,CAACQ,IAAR,GAAe,GAAER,OAAO,CAACQ,IAAK,UAASR,OAAO,CAACA,OAAQ,OAAME,WAAY,EAAzE,GAA8E,GAAEF,OAAO,CAACA,OAAQ,OAAME,WAAY,EAA7H;AACA;;AACJ,aAAK,MAAL;AACI,cAAIK,IAAI,GAAI,QAAOP,OAAO,CAACQ,IAAK,OAAMN,WAAY,EAAlD;AACA;;AACJ,aAAK,MAAL;AAEA;AACI;AAVR;;AAYA,0BAAQ,QAAC,QAAD;AAA0C,QAAA,cAAc,MAAxD;AAAA,+BACJ,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEK;AAAvB;AAAA;AAAA;AAAA;AAAA;AADI,SAAeE,QAAQ,CAACT,OAAO,CAACC,OAAT,CAAvB;AAAA;AAAA;AAAA;AAAA,cAAR;AAGH,KAlBmC,CAAnB,GAkBZ,aAlBL;AAmBA,wBACI,QAAC,KAAD;AAAO,MAAA,KAAK,EAAE;AAACS,QAAAA,QAAQ,EAAE;AAAX,OAAd;AAAA,6BACI,QAAC,IAAD;AAAA,kBACCd;AADD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AA5BsC;AA+B3C,eAAeF,WAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Paper, List, ListItem, ListItemText } from '@mui/material'\n\n\nexport class MessageList extends Component {\n    render() {\n        const messages = this.props.events? this.props.events.map( (message) => {\n            if(!message.created) debugger\n            var dateAndTime = new Date(message.created).toLocaleDateString(\"en-US\") + ' at ' + new Date(message.created).toLocaleTimeString(\"en-US\")\n            switch(message.type){\n                case 'Message':\n                    var text = message.user? `${message.user} says: ${message.message} at ${dateAndTime}` : `${message.message} at ${dateAndTime}`\n                    break;\n                case 'Join':\n                    var text = `JOIN ${message.user} at ${dateAndTime}`\n                    break;\n                case 'Part':\n\n                default:\n                    debugger\n            }\n            return( <ListItem key={toString(message.created)} disablePadding>\n                <ListItemText primary={text} />\n            </ListItem>)\n        }) : 'no messages'\n        return (\n            <Paper style={{overflow: 'auto'}}>\n                <List>\n                {messages}\n                </List>\n            </Paper>\n        )\n    }\n}\n\nexport default MessageList\n"]},"metadata":{},"sourceType":"module"}