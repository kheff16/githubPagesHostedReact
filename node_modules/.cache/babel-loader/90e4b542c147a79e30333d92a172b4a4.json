{"ast":null,"code":"var _jsxFileName = \"/app/src/App.jsx\";\nimport { Component } from \"react\";\nimport \"./App.css\";\nimport Compose from \"./components/Compose\";\nimport LoginForm from \"./components/LoginForm\";\nimport MessageList from \"./components/MessageList\";\nimport UserList from \"./components/UserList\";\nimport { Grid, Paper } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userList: [],\n      events: [],\n      username: \"\",\n      password: \"\",\n      needToLogin: true,\n      messageToken: \"\",\n      streamToken: \"\"\n    };\n    this.serve = this.serve.bind(this);\n    this.login = this.login.bind(this);\n    this.setUsername = this.setUsername.bind(this);\n    this.setPassword = this.setPassword.bind(this);\n  }\n\n  login() {\n    var request = new XMLHttpRequest();\n    var form = new FormData();\n    form.append(\"password\", this.state.password);\n    form.append(\"username\", this.state.username);\n    request.open(\"POST\", process.env.REACT_APP_BASE_URL + \"/login\");\n    var that = this;\n\n    request.onreadystatechange = function () {\n      if (this.readyState !== 4) return;\n\n      if (this.status === 201) {\n        const data = JSON.parse(this.responseText);\n        that.setState({\n          password: \"\",\n          username: \"\",\n          needToLogin: false,\n          messageToken: data.message_token,\n          streamToken: data.stream_token\n        });\n        that.serve();\n      } else if (this.status === 403) {\n        alert(\"Invalid username or password\");\n      } else if (this.status === 409) {\n        alert(that.state.username + \" is already logged in\");\n      } else {\n        alert(this.status + \" failure to /login\");\n      }\n    };\n\n    request.send(form);\n  }\n\n  serve() {\n    const server = new EventSource(`${process.env.REACT_APP_BASE_URL}/stream/${this.state.streamToken}`);\n    server.addEventListener(\"message\", event => {\n      if (event.data === \"Goodbye!\") {\n        console.log(\"Closing SSE connection\");\n        server.close();\n      } else {\n        console.log(event.data);\n      }\n    });\n    server.addEventListener(\"connect\", event => {});\n    server.addEventListener(\"Join\", event => {\n      var data = JSON.parse(event.data);\n      userList.add(data.user);\n    });\n    server.addEventListener(\"ServerStatus\", event => {\n      console.log(\" serverStatus\");\n      console.log(event);\n    });\n    server.addEventListener(\"Users\", event => {\n      this.setState({\n        userList: JSON.parse(event.data).users\n      });\n    });\n\n    server.onerror = _event => {\n      console.log(\"Connection lost, reestablishing\");\n    };\n  }\n\n  setUsername(value) {\n    this.setState({\n      username: value\n    });\n  }\n\n  setPassword(value) {\n    this.setState({\n      password: value\n    });\n  }\n\n  render() {\n    return this.state.needToLogin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"Not logged in\", /*#__PURE__*/_jsxDEV(LoginForm, {\n        setUsername: this.setUsername,\n        setPassword: this.setPassword,\n        needToLogin: this.state.needToLogin,\n        serve: this.serve,\n        login: this.login,\n        username: this.state.username,\n        password: this.state.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(LoginForm, {\n        setUsername: this.setUsername,\n        setPassword: this.setPassword,\n        needToLogin: this.state.needToLogin,\n        serve: this.serve,\n        login: this.login,\n        username: this.state.username,\n        password: this.state.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            children: [/*#__PURE__*/_jsxDEV(MessageList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Compose, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            children: /*#__PURE__*/_jsxDEV(UserList, {\n              userList: this.state.userList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/app/src/App.jsx"],"names":["Component","Compose","LoginForm","MessageList","UserList","Grid","Paper","App","constructor","props","state","userList","events","username","password","needToLogin","messageToken","streamToken","serve","bind","login","setUsername","setPassword","request","XMLHttpRequest","form","FormData","append","open","process","env","REACT_APP_BASE_URL","that","onreadystatechange","readyState","status","data","JSON","parse","responseText","setState","message_token","stream_token","alert","send","server","EventSource","addEventListener","event","console","log","close","add","user","users","onerror","_event","value","render"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport \"./App.css\";\nimport Compose from \"./components/Compose\";\nimport LoginForm from \"./components/LoginForm\";\nimport MessageList from \"./components/MessageList\";\nimport UserList from \"./components/UserList\"\nimport { Grid, Paper } from '@mui/material'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userList: [],\n      events: [],\n      username:\"\",\n      password:\"\",\n      needToLogin: true,\n      messageToken: \"\",\n      streamToken: \"\"\n    }\n    this.serve = this.serve.bind(this)\n    this.login = this.login.bind(this)\n    this.setUsername = this.setUsername.bind(this)\n    this.setPassword = this.setPassword.bind(this)\n  }\n\n\n    login() {\n      var request = new XMLHttpRequest();\n      var form = new FormData();\n      form.append(\"password\", this.state.password);\n      form.append(\"username\", this.state.username);\n      request.open(\"POST\", process.env.REACT_APP_BASE_URL + \"/login\");\n      var that = this;\n      request.onreadystatechange = function() {\n          if (this.readyState !== 4) return;\n          if (this.status === 201) {\n              const data = JSON.parse(this.responseText);\n              that.setState({\n                password: \"\",\n                username: \"\", \n                needToLogin: false,\n                messageToken: data.message_token,\n                streamToken: data.stream_token\n              })\n              that.serve();\n          } else if (this.status === 403) {\n              alert(\"Invalid username or password\");\n          } else if (this.status === 409) {\n              alert(that.state.username + \" is already logged in\");\n          } else {\n              alert(this.status + \" failure to /login\");\n          }\n      };\n      request.send(form);\n    }\n\n    serve(){\n      const server = new EventSource(`${process.env.REACT_APP_BASE_URL}/stream/${this.state.streamToken}`);\n      server.addEventListener(\"message\", (event) => {\n        if (event.data === \"Goodbye!\") {\n          console.log(\"Closing SSE connection\");\n          server.close();\n        } else {\n          console.log(event.data);\n        }\n      });\n      server.addEventListener(\"connect\", (event) => {})\n      server.addEventListener(\"Join\", (event) => {\n        var data = JSON.parse(event.data);\n        userList.add(data.user);\n      })\n      server.addEventListener(\"ServerStatus\", (event) => {\n        console.log(\" serverStatus\");\n        console.log(event)\n      })\n      server.addEventListener(\"Users\", (event => {\n        this.setState({ userList: JSON.parse(event.data).users})\n      }))\n      server.onerror = (_event) => {\n        console.log(\"Connection lost, reestablishing\");\n      };\n    }\n\n    setUsername(value){\n      this.setState({username: value})\n    }\n\n    setPassword(value){\n      this.setState({password: value})\n    }\n\n  \n\n  render() {\n\n    return this.state.needToLogin? ( \n      <>\n        Not logged in\n        <LoginForm setUsername={this.setUsername} setPassword={this.setPassword} needToLogin={this.state.needToLogin} serve={this.serve} login={this.login} username={this.state.username} password={this.state.password}/>\n      </>\n      ) : (\n      <>\n        <LoginForm setUsername={this.setUsername} setPassword={this.setPassword} needToLogin={this.state.needToLogin} serve={this.serve} login={this.login} username={this.state.username} password={this.state.password}/>\n        <Grid container spacing={2}>\n          <Grid item xs={8} md={8}>\n            <Paper>\n              <MessageList/>\n              <Compose/>\n            </Paper>\n          </Grid>\n          <Grid item xs={4} md={4}>\n            <Paper >\n              <UserList userList={this.state.userList} />\n            </Paper>\n          </Grid>\n        </Grid>\n      </>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}