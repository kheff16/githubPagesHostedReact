{"ast":null,"code":"var _jsxFileName = \"/app/src/App.jsx\";\nimport { Component } from \"react\";\nimport \"./App.css\";\nimport { Dialog, FormControl, FormGroup, FormLabel, Input } from '@mui/material';\nimport { Box } from \"@mui/system\";\nimport API from './helpers/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction login() {\n  var request = new XMLHttpRequest();\n  var form = new FormData();\n  form.append(\"password\", password.value);\n  form.append(\"username\", username.value);\n  sessionStorage.setItem(\"url\", url.value);\n  request.open(\"POST\", sessionStorage.getItem(\"url\") + \"/login\");\n\n  request.onreadystatechange = function () {\n    if (this.readyState != 4) return;\n\n    if (this.status === 201) {\n      login_modal.style.display = \"none\";\n      password.value = \"\";\n      username.value = \"\";\n      const data = JSON.parse(this.responseText);\n      messageToken = data.message_token;\n      streamToken = data.stream_token;\n      start_stream();\n    } else if (this.status === 403) {\n      alert(\"Invalid username or password\");\n    } else if (this.status === 409) {\n      alert(username.value + \" is already logged in\");\n    } else {\n      alert(this.status + \" failure to /login\");\n    }\n  };\n\n  request.send(form);\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.manageSubmit = () => {\n      var loginFormData = new FormData();\n      loginFormData.append('username', this.state.username);\n      loginFormData.append('password', this.state.password);\n      API.post('/login', loginFormData, {\n        headers: {\n          \"ContentType\": 'multipart/form-data'\n        }\n      }).then(reply => {\n        console.log(reply); // debugger\n\n        this.setState({\n          needToLogin: false,\n          username: \"\",\n          password: \"\"\n        });\n      }).catch(e => {\n        console.log(e); // debugger\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      needToLogin: true\n    }; // const server = new EventSource(\"http://localhost:3000/stream/a\");\n    // server.addEventListener(\"message\", (event) => {\n    //   if (event.data === \"Goodbye!\") {\n    //     console.log(\"Closing SSE connection\");\n    //     server.close();\n    //   } else {\n    //     console.log(event.data);\n    //   }\n    // });\n    // server.onerror = (_event) => {\n    //   console.log(\"Connection lost, reestablishing\");\n    // };\n\n    this.manageSubmit = this.manageSubmit.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Dialog, {\n        open: this.state.needToLogin,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          p: 5,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              pb: 2,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Username: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                onChange: e => this.setState({\n                  username: e.target.value\n                }),\n                value: this.state.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              id: \"loginForm\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                id: \"loginForm\",\n                children: \"Password: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"loginForm\",\n                type: \"password\",\n                onKeyUp: e => {\n                  if (e.key === 'Enter') this.manageSubmit();\n                },\n                onChange: e => this.setState({\n                  password: e.target.value\n                }),\n                value: this.state.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/app/src/App.jsx"],"names":["Component","Dialog","FormControl","FormGroup","FormLabel","Input","Box","API","login","request","XMLHttpRequest","form","FormData","append","password","value","username","sessionStorage","setItem","url","open","getItem","onreadystatechange","readyState","status","login_modal","style","display","data","JSON","parse","responseText","messageToken","message_token","streamToken","stream_token","start_stream","alert","send","App","constructor","props","manageSubmit","loginFormData","state","post","headers","then","reply","console","log","setState","needToLogin","catch","e","bind","render","target","key"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAO,WAAP;AAEA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,SAA9B,EAAyCC,SAAzC,EAAoDC,KAApD,QAAiE,eAAjE;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;;;;AAEA,SAASC,KAAT,GAAiB;AACf,MAAIC,OAAO,GAAG,IAAIC,cAAJ,EAAd;AACA,MAAIC,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACAD,EAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwBC,QAAQ,CAACC,KAAjC;AACAJ,EAAAA,IAAI,CAACE,MAAL,CAAY,UAAZ,EAAwBG,QAAQ,CAACD,KAAjC;AACAE,EAAAA,cAAc,CAACC,OAAf,CAAuB,KAAvB,EAA8BC,GAAG,CAACJ,KAAlC;AACAN,EAAAA,OAAO,CAACW,IAAR,CAAa,MAAb,EAAqBH,cAAc,CAACI,OAAf,CAAuB,KAAvB,IAAgC,QAArD;;AACAZ,EAAAA,OAAO,CAACa,kBAAR,GAA6B,YAAW;AACpC,QAAI,KAAKC,UAAL,IAAmB,CAAvB,EAA0B;;AAC1B,QAAI,KAAKC,MAAL,KAAgB,GAApB,EAAyB;AACrBC,MAAAA,WAAW,CAACC,KAAZ,CAAkBC,OAAlB,GAA4B,MAA5B;AACAb,MAAAA,QAAQ,CAACC,KAAT,GAAiB,EAAjB;AACAC,MAAAA,QAAQ,CAACD,KAAT,GAAiB,EAAjB;AACA,YAAMa,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKC,YAAhB,CAAb;AACAC,MAAAA,YAAY,GAAGJ,IAAI,CAACK,aAApB;AACAC,MAAAA,WAAW,GAAGN,IAAI,CAACO,YAAnB;AACAC,MAAAA,YAAY;AACf,KARD,MAQO,IAAI,KAAKZ,MAAL,KAAgB,GAApB,EAAyB;AAC5Ba,MAAAA,KAAK,CAAC,8BAAD,CAAL;AACH,KAFM,MAEA,IAAI,KAAKb,MAAL,KAAgB,GAApB,EAAyB;AAC5Ba,MAAAA,KAAK,CAACrB,QAAQ,CAACD,KAAT,GAAiB,uBAAlB,CAAL;AAEH,KAHM,MAGA;AACHsB,MAAAA,KAAK,CAAC,KAAKb,MAAL,GAAc,oBAAf,CAAL;AACH;AACJ,GAlBD;;AAmBAf,EAAAA,OAAO,CAAC6B,IAAR,CAAa3B,IAAb;AACD;;AAID,MAAM4B,GAAN,SAAkBvC,SAAlB,CAA4B;AAC1BwC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA2BnBC,YA3BmB,GA2BJ,MAAM;AACnB,UAAIC,aAAa,GAAG,IAAI/B,QAAJ,EAApB;AAEA+B,MAAAA,aAAa,CAAC9B,MAAd,CAAqB,UAArB,EAAiC,KAAK+B,KAAL,CAAW5B,QAA5C;AACA2B,MAAAA,aAAa,CAAC9B,MAAd,CAAqB,UAArB,EAAiC,KAAK+B,KAAL,CAAW9B,QAA5C;AAGAP,MAAAA,GAAG,CAACsC,IAAJ,CAAS,QAAT,EAAmBF,aAAnB,EAAkC;AAACG,QAAAA,OAAO,EAAE;AAAC,yBAAgB;AAAjB;AAAV,OAAlC,EAAsFC,IAAtF,CAA6FC,KAAD,IAAW;AACrGC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADqG,CAErG;;AACA,aAAKG,QAAL,CAAc;AAACC,UAAAA,WAAW,EAAE,KAAd;AAAqBpC,UAAAA,QAAQ,EAAE,EAA/B;AAAmCF,UAAAA,QAAQ,EAAE;AAA7C,SAAd;AACD,OAJD,EAIGuC,KAJH,CAIWC,CAAD,IAAO;AACfL,QAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ,EADe,CAEf;AACD,OAPD;AAQD,KA1CkB;;AAGjB,SAAKV,KAAL,GAAa;AACX5B,MAAAA,QAAQ,EAAC,EADE;AAEXF,MAAAA,QAAQ,EAAC,EAFE;AAGXsC,MAAAA,WAAW,EAAE;AAHF,KAAb,CAHiB,CASjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAKV,YAAL,GAAoB,KAAKA,YAAL,CAAkBa,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAuBDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWQ,WAAzB;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,CAAC,EAAE,CAAR;AAAA,iCACE,QAAC,SAAD;AAAA,oCACE,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,sCACE,QAAC,SAAD;AAAA,0BACG;AADH;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,QAAC,KAAD;AAAO,gBAAA,QAAQ,EAAGE,CAAD,IAAO,KAAKH,QAAL,CAAc;AAACnC,kBAAAA,QAAQ,EAAEsC,CAAC,CAACG,MAAF,CAAS1C;AAApB,iBAAd,CAAxB;AAAmE,gBAAA,KAAK,EAAE,KAAK6B,KAAL,CAAW5B;AAArF;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAOE,QAAC,GAAD;AAAK,cAAA,EAAE,EAAC,WAAR;AAAA,sCACE,QAAC,SAAD;AAAW,gBAAA,EAAE,EAAC,WAAd;AAAA,0BACK;AADL;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,QAAC,KAAD;AAAO,gBAAA,EAAE,EAAC,WAAV;AAAsB,gBAAA,IAAI,EAAC,UAA3B;AAAsC,gBAAA,OAAO,EAAGsC,CAAD,IAAO;AAAC,sBAAGA,CAAC,CAACI,GAAF,KAAU,OAAb,EAAsB,KAAKhB,YAAL;AAAoB,iBAAjG;AAAmG,gBAAA,QAAQ,EAAGY,CAAD,IAAO,KAAKH,QAAL,CAAc;AAACrC,kBAAAA,QAAQ,EAAEwC,CAAC,CAACG,MAAF,CAAS1C;AAApB,iBAAd,CAApH;AAA+J,gBAAA,KAAK,EAAE,KAAK6B,KAAL,CAAW9B;AAAjL;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAsBD;;AAtEyB;;AAwE5B,eAAeyB,GAAf","sourcesContent":["import { Component } from \"react\";\nimport \"./App.css\";\n\nimport { Dialog, FormControl, FormGroup, FormLabel, Input } from '@mui/material';\nimport { Box } from \"@mui/system\";\nimport API from './helpers/client'\n\nfunction login() {\n  var request = new XMLHttpRequest();\n  var form = new FormData();\n  form.append(\"password\", password.value);\n  form.append(\"username\", username.value);\n  sessionStorage.setItem(\"url\", url.value);\n  request.open(\"POST\", sessionStorage.getItem(\"url\") + \"/login\");\n  request.onreadystatechange = function() {\n      if (this.readyState != 4) return;\n      if (this.status === 201) {\n          login_modal.style.display = \"none\";\n          password.value = \"\";\n          username.value = \"\";\n          const data = JSON.parse(this.responseText);\n          messageToken = data.message_token;\n          streamToken = data.stream_token;\n          start_stream();\n      } else if (this.status === 403) {\n          alert(\"Invalid username or password\");\n      } else if (this.status === 409) {\n          alert(username.value + \" is already logged in\");\n\n      } else {\n          alert(this.status + \" failure to /login\");\n      }\n  };\n  request.send(form);\n}\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username:\"\",\n      password:\"\",\n      needToLogin: true\n    }\n\n    // const server = new EventSource(\"http://localhost:3000/stream/a\");\n    // server.addEventListener(\"message\", (event) => {\n    //   if (event.data === \"Goodbye!\") {\n    //     console.log(\"Closing SSE connection\");\n    //     server.close();\n    //   } else {\n    //     console.log(event.data);\n    //   }\n    // });\n    // server.onerror = (_event) => {\n    //   console.log(\"Connection lost, reestablishing\");\n    // };\n\n    this.manageSubmit = this.manageSubmit.bind(this)\n  }\n\n  \n\n  manageSubmit = () => {\n    var loginFormData = new FormData();\n\n    loginFormData.append('username', this.state.username);\n    loginFormData.append('password', this.state.password)\n\n\n    API.post('/login', loginFormData, {headers: {\"ContentType\" : 'multipart/form-data'}}).then( (reply) => {\n      console.log(reply)\n      // debugger\n      this.setState({needToLogin: false, username: \"\", password: \"\"})\n    }).catch( (e) => {\n      console.log(e)\n      // debugger\n    })\n  }\n\n  \n\n  render() {\n    return (\n      <>\n        <Dialog open={this.state.needToLogin}>\n          <Box p={5}>\n            <FormGroup>\n              <Box pb={2}>\n                <FormLabel>\n                  {\"Username: \"}\n                </FormLabel>\n                <Input onChange={(e) => this.setState({username: e.target.value})} value={this.state.username}/>\n              </Box>\n              <Box id=\"loginForm\">\n                <FormLabel id=\"loginForm\">\n                    {\"Password: \"}\n                  </FormLabel>\n                <Input id=\"loginForm\" type=\"password\" onKeyUp={(e) => {if(e.key === 'Enter') this.manageSubmit()}} onChange={(e) => this.setState({password: e.target.value})} value={this.state.password} />\n              </Box>\n            </FormGroup>\n          </Box>\n        </Dialog>\n      </>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}