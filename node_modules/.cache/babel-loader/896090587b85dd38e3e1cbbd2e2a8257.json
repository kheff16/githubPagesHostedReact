{"ast":null,"code":"var _jsxFileName = \"/app/src/App.jsx\";\nimport { Component } from \"react\";\nimport \"./App.css\";\nimport { Dialog, FormControl, FormGroup, FormLabel, Input } from '@mui/material';\nimport { Box } from \"@mui/system\";\nimport API from './helpers/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.manageSubmit = () => {\n      var loginFormData = new FormData();\n      loginFormData.append('username', this.state.username);\n      loginFormData.append('password', this.state.password);\n      API.post('/login', loginFormData, {\n        headers: {\n          \"ContentType\": 'multipart/form-data'\n        }\n      }).then(reply => {\n        console.log(reply); // debugger\n\n        this.setState({\n          needToLogin: false,\n          username: \"\",\n          password: \"\"\n        });\n      }).catch(e => {\n        console.log(e); // debugger\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      needToLogin: true\n    };\n\n    function serve() {\n      const server = new EventSource(\"http://localhost:3000/stream/a\");\n      server.addEventListener(\"message\", event => {\n        if (event.data === \"Goodbye!\") {\n          console.log(\"Closing SSE connection\");\n          server.close();\n        } else {\n          console.log(event.data);\n        }\n      });\n\n      server.onerror = _event => {\n        console.log(\"Connection lost, reestablishing\");\n      };\n    }\n\n    function login() {\n      var request = new XMLHttpRequest();\n      var form = new FormData();\n      form.append(\"password\", this.state.password);\n      form.append(\"username\", this.state.username);\n      sessionStorage.setItem(\"url\", url.value);\n      request.open(\"POST\", sessionStorage.getItem(\"url\") + \"/login\");\n\n      request.onreadystatechange = function () {\n        if (this.readyState != 4) return;\n\n        if (this.status === 201) {\n          login_modal.style.display = \"none\";\n          password.value = \"\";\n          username.value = \"\";\n          const data = JSON.parse(this.responseText);\n          messageToken = data.message_token;\n          streamToken = data.stream_token;\n          start_stream();\n        } else if (this.status === 403) {\n          alert(\"Invalid username or password\");\n        } else if (this.status === 409) {\n          alert(username.value + \" is already logged in\");\n        } else {\n          alert(this.status + \" failure to /login\");\n        }\n      };\n\n      request.send(form);\n    }\n\n    this.manageSubmit = this.manageSubmit.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Dialog, {\n        open: this.state.needToLogin,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          p: 5,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              pb: 2,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Username: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                onChange: e => this.setState({\n                  username: e.target.value\n                }),\n                value: this.state.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              id: \"loginForm\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                id: \"loginForm\",\n                children: \"Password: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"loginForm\",\n                type: \"password\",\n                onKeyUp: e => {\n                  if (e.key === 'Enter') this.manageSubmit();\n                },\n                onChange: e => this.setState({\n                  password: e.target.value\n                }),\n                value: this.state.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/app/src/App.jsx"],"names":["Component","Dialog","FormControl","FormGroup","FormLabel","Input","Box","API","App","constructor","props","manageSubmit","loginFormData","FormData","append","state","username","password","post","headers","then","reply","console","log","setState","needToLogin","catch","e","serve","server","EventSource","addEventListener","event","data","close","onerror","_event","login","request","XMLHttpRequest","form","sessionStorage","setItem","url","value","open","getItem","onreadystatechange","readyState","status","login_modal","style","display","JSON","parse","responseText","messageToken","message_token","streamToken","stream_token","start_stream","alert","send","bind","render","target","key"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport \"./App.css\";\n\nimport { Dialog, FormControl, FormGroup, FormLabel, Input } from '@mui/material';\nimport { Box } from \"@mui/system\";\nimport API from './helpers/client'\n\n\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username:\"\",\n      password:\"\",\n      needToLogin: true\n    }\n\n    function serve(){\n      const server = new EventSource(\"http://localhost:3000/stream/a\");\n      server.addEventListener(\"message\", (event) => {\n        if (event.data === \"Goodbye!\") {\n          console.log(\"Closing SSE connection\");\n          server.close();\n        } else {\n          console.log(event.data);\n        }\n      });\n      server.onerror = (_event) => {\n        console.log(\"Connection lost, reestablishing\");\n      };\n    }\n\n\n\n    function login() {\n      var request = new XMLHttpRequest();\n      var form = new FormData();\n      form.append(\"password\", this.state.password);\n      form.append(\"username\", this.state.username);\n      sessionStorage.setItem(\"url\", url.value);\n      request.open(\"POST\", sessionStorage.getItem(\"url\") + \"/login\");\n      request.onreadystatechange = function() {\n          if (this.readyState != 4) return;\n          if (this.status === 201) {\n              login_modal.style.display = \"none\";\n              password.value = \"\";\n              username.value = \"\";\n              const data = JSON.parse(this.responseText);\n              messageToken = data.message_token;\n              streamToken = data.stream_token;\n              start_stream();\n          } else if (this.status === 403) {\n              alert(\"Invalid username or password\");\n          } else if (this.status === 409) {\n              alert(username.value + \" is already logged in\");\n    \n          } else {\n              alert(this.status + \" failure to /login\");\n          }\n      };\n      request.send(form);\n    }\n\n    this.manageSubmit = this.manageSubmit.bind(this)\n  }\n\n  \n\n  manageSubmit = () => {\n    var loginFormData = new FormData();\n\n    loginFormData.append('username', this.state.username);\n    loginFormData.append('password', this.state.password)\n\n\n    API.post('/login', loginFormData, {headers: {\"ContentType\" : 'multipart/form-data'}}).then( (reply) => {\n      console.log(reply)\n      // debugger\n      this.setState({needToLogin: false, username: \"\", password: \"\"})\n    }).catch( (e) => {\n      console.log(e)\n      // debugger\n    })\n  }\n\n  \n\n  render() {\n    return (\n      <>\n        <Dialog open={this.state.needToLogin}>\n          <Box p={5}>\n            <FormGroup>\n              <Box pb={2}>\n                <FormLabel>\n                  {\"Username: \"}\n                </FormLabel>\n                <Input onChange={(e) => this.setState({username: e.target.value})} value={this.state.username}/>\n              </Box>\n              <Box id=\"loginForm\">\n                <FormLabel id=\"loginForm\">\n                    {\"Password: \"}\n                  </FormLabel>\n                <Input id=\"loginForm\" type=\"password\" onKeyUp={(e) => {if(e.key === 'Enter') this.manageSubmit()}} onChange={(e) => this.setState({password: e.target.value})} value={this.state.password} />\n              </Box>\n            </FormGroup>\n          </Box>\n        </Dialog>\n      </>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}