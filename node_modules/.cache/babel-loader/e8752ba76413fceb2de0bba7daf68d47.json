{"ast":null,"code":"var _jsxFileName = \"/app/src/App.jsx\";\nimport { Component } from \"react\";\nimport \"./App.css\";\nimport { Dialog, FormControl, FormGroup, FormLabel, Input } from '@mui/material';\nimport { Box } from \"@mui/system\";\nimport API from './helpers/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.manageSubmit = () => {\n      var loginFormData = new FormData();\n      loginFormData.append('username', this.state.username);\n      loginFormData.append('password', this.state.password);\n      API.post('/login', loginFormData, {\n        headers: {\n          \"ContentType\": 'multipart/form-data'\n        }\n      }).then(reply => {\n        console.log(reply); // debugger\n\n        this.setState({\n          needToLogin: false,\n          username: \"\",\n          password: \"\"\n        });\n      }).catch(e => {\n        console.log(e); // debugger\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      needToLogin: true,\n      messageToken: \"\",\n      streamToken: \"\",\n      url: \"https://chat.cs291.com\"\n    };\n    this.manageSubmit = this.manageSubmit.bind(this);\n    this.serve = this.serve.bind(this);\n    this.login = this.login.bind(this);\n  }\n\n  serve() {\n    const server = new EventSource(\"http://localhost:3000/stream/a\");\n    server.addEventListener(\"message\", event => {\n      if (event.data === \"Goodbye!\") {\n        console.log(\"Closing SSE connection\");\n        server.close();\n      } else {\n        console.log(event.data);\n      }\n    });\n\n    server.onerror = _event => {\n      console.log(\"Connection lost, reestablishing\");\n    };\n  }\n\n  login() {\n    var request = new XMLHttpRequest();\n    var form = new FormData();\n    form.append(\"password\", this.state.password);\n    form.append(\"username\", this.state.username);\n    sessionStorage.setItem(\"url\", this.state.url);\n    request.open(\"POST\", sessionStorage.getItem(\"url\") + \"/login\");\n\n    request.onreadystatechange = function () {\n      if (this.readyState != 4) return;\n\n      if (this.status === 201) {\n        // login_modal.style.display = \"none\";\n        this.setState({\n          password: \"\",\n          username: \"\"\n        });\n        const data = JSON.parse(this.responseText);\n        this.state.messageToken = data.message_token;\n        this.state.streamToken = data.stream_token; // start_stream();\n      } else if (this.status === 403) {\n        alert(\"Invalid username or password\");\n      } else if (this.status === 409) {\n        alert(this.state.username + \" is already logged in\");\n      } else {\n        alert(this.status + \" failure to /login\");\n      }\n    };\n\n    request.send(form);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Dialog, {\n        open: this.state.needToLogin,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          p: 5,\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              pb: 2,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Username: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                onChange: e => this.setState({\n                  username: e.target.value\n                }),\n                value: this.state.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              id: \"loginForm\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                id: \"loginForm\",\n                children: \"Password: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"loginForm\",\n                type: \"password\",\n                onKeyUp: e => {\n                  if (e.key === 'Enter') this.manageSubmit();\n                },\n                onChange: e => this.setState({\n                  password: e.target.value\n                }),\n                value: this.state.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/app/src/App.jsx"],"names":["Component","Dialog","FormControl","FormGroup","FormLabel","Input","Box","API","App","constructor","props","manageSubmit","loginFormData","FormData","append","state","username","password","post","headers","then","reply","console","log","setState","needToLogin","catch","e","messageToken","streamToken","url","bind","serve","login","server","EventSource","addEventListener","event","data","close","onerror","_event","request","XMLHttpRequest","form","sessionStorage","setItem","open","getItem","onreadystatechange","readyState","status","JSON","parse","responseText","message_token","stream_token","alert","send","render","target","value","key"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport \"./App.css\";\n\nimport { Dialog, FormControl, FormGroup, FormLabel, Input } from '@mui/material';\nimport { Box } from \"@mui/system\";\nimport API from './helpers/client'\n\n\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username:\"\",\n      password:\"\",\n      needToLogin: true,\n      messageToken: \"\",\n      streamToken: \"\",\n      url: \"https://chat.cs291.com\"\n    }\n    this.manageSubmit = this.manageSubmit.bind(this)\n    this.serve = this.serve.bind(this)\n    this.login = this.login.bind(this)\n  }\n\n    serve(){\n      const server = new EventSource(\"http://localhost:3000/stream/a\");\n      server.addEventListener(\"message\", (event) => {\n        if (event.data === \"Goodbye!\") {\n          console.log(\"Closing SSE connection\");\n          server.close();\n        } else {\n          console.log(event.data);\n        }\n      });\n      server.onerror = (_event) => {\n        console.log(\"Connection lost, reestablishing\");\n      };\n    }\n\n\n\n    login() {\n      var request = new XMLHttpRequest();\n      var form = new FormData();\n      form.append(\"password\", this.state.password);\n      form.append(\"username\", this.state.username);\n      sessionStorage.setItem(\"url\", this.state.url);\n      request.open(\"POST\", sessionStorage.getItem(\"url\") + \"/login\");\n      request.onreadystatechange = function() {\n          if (this.readyState != 4) return;\n          if (this.status === 201) {\n              // login_modal.style.display = \"none\";\n              this.setState({password: \"\",\n              username: \"\"})\n              const data = JSON.parse(this.responseText);\n              this.state.messageToken = data.message_token;\n              this.state.streamToken = data.stream_token;\n              // start_stream();\n          } else if (this.status === 403) {\n              alert(\"Invalid username or password\");\n          } else if (this.status === 409) {\n              alert(this.state.username + \" is already logged in\");\n          } else {\n              alert(this.status + \" failure to /login\");\n          }\n      };\n      request.send(form);\n    }\n\n  \n\n  manageSubmit = () => {\n    var loginFormData = new FormData();\n\n    loginFormData.append('username', this.state.username);\n    loginFormData.append('password', this.state.password)\n\n\n    API.post('/login', loginFormData, {headers: {\"ContentType\" : 'multipart/form-data'}}).then( (reply) => {\n      console.log(reply)\n      // debugger\n      this.setState({needToLogin: false, username: \"\", password: \"\"})\n    }).catch( (e) => {\n      console.log(e)\n      // debugger\n    })\n  }\n\n  \n\n  render() {\n    return (\n      <>\n        <Dialog open={this.state.needToLogin}>\n          <Box p={5}>\n            <FormGroup>\n              <Box pb={2}>\n                <FormLabel>\n                  {\"Username: \"}\n                </FormLabel>\n                <Input onChange={(e) => this.setState({username: e.target.value})} value={this.state.username}/>\n              </Box>\n              <Box id=\"loginForm\">\n                <FormLabel id=\"loginForm\">\n                    {\"Password: \"}\n                  </FormLabel>\n                <Input id=\"loginForm\" type=\"password\" onKeyUp={(e) => {if(e.key === 'Enter') this.manageSubmit()}} onChange={(e) => this.setState({password: e.target.value})} value={this.state.password} />\n              </Box>\n            </FormGroup>\n          </Box>\n        </Dialog>\n      </>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}